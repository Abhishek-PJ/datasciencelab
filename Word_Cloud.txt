import nltk
from nltk.tokenize import word_tokenize
from nltk.corpus import stopwords
from nltk.stem import PorterStemmer, WordNetLemmatizer
from collections import Counter
from wordcloud import WordCloud
import matplotlib.pyplot as plt

# Download necessary NLTK resources
nltk.download('punkt')
nltk.download('stopwords')
nltk.download('wordnet')

# Load the dataset
file_path = "output.txt"
with open(file_path, "r", encoding="utf-8") as file:
    text = file.read().lower()

# Tokenization
tokens = word_tokenize(text)

# Remove numbers, punctuation, and whitespaces
tokens = [word for word in tokens if word.isalpha()]

# Remove stop words
stop_words = set(stopwords.words('english'))
tokens = [word for word in tokens if word not in stop_words]

# Stemming and Lemmatization
stemmer = PorterStemmer()
lemmatizer = WordNetLemmatizer()
tokens_stemmed = [stemmer.stem(word) for word in tokens]
tokens_lemmatized = [lemmatizer.lemmatize(word) for word in tokens]

# Find frequent words
word_freq = Counter(tokens_lemmatized)
common_words = word_freq.most_common(50)

# Plot bar chart of frequent words
plt.figure(figsize=(12, 6))
plt.barh([word[0] for word in common_words], [word[1] for word in common_words], color='skyblue')
plt.xlabel("Frequency")
plt.ylabel("Words")
plt.title("Top 50 Frequent Words After Preprocessing")
plt.gca().invert_yaxis()
plt.show()

# Generate and plot the word cloud
wordcloud = WordCloud(width=800, height=400, background_color="white", colormap="plasma",
                      max_words=100, contour_color='blue').generate_from_frequencies(word_freq)

plt.figure(figsize=(12, 6))
plt.imshow(wordcloud, interpolation="bilinear")
plt.axis("off")
plt.title("Word Cloud After Preprocessing", fontsize=14)
plt.show()
